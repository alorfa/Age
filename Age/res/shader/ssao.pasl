out float FragColor;

in vec2 uv;

uniform sampler2D normal_map, pos_map, noise_map;
uniform vec3 kernel[64];
uniform mat4 proj;

void main()
{	
	vec2 noiseScale = vec2(textureSize(pos_map, 0)) / vec2(textureSize(noise_map, 0));
    vec3 normal = texture(normal_map, uv).rgb;
    vec3 fragPos = texture(pos_map, uv).rgb;
    vec3 randomVec = texture(noise_map, uv * noiseScale).rgb;

    vec3 tangent = normalize(randomVec - normal * dot(randomVec, normal));
	vec3 bitangent = cross(normal, tangent);
	mat3 TBN = mat3(tangent, bitangent, normal);

	float occlusion = 0.;
    FragColor = occlusion;
}
