out vec4 FragColor;

in vec2 uv;

uniform sampler2D baseColor_roughness_map, normal_metalness_map, depth_map, ao_map;
uniform mat4 invCamera;
uniform SpotLight light;
uniform vec3 cameraPos;

void main()
{
    initMaterial();
    vec4 diffuse_roughness = texture(baseColor_roughness_map, uv);
    vec4 normal_metalness = texture(normal_metalness_map, uv);
    vec3 fragPos = depthToPos(invCamera, uv, texture(depth_map, uv).r);
    material.base_color = diffuse_roughness.rgb;
    material.roughness = diffuse_roughness.a;
    material.normal = normal_metalness.xyz;
    material.metallic = normal_metalness.a;
    scene_ao = texture(ao_map, uv).r;

    initViewContext(fragPos, cameraPos);
    vec3 outColor = pbr_computeLight(toPointLight(light, fragPos), fragPos);

    FragColor = vec4(outColor, 1.0);
}
